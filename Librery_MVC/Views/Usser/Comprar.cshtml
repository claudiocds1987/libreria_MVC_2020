@model List<Librery_MVC.Models.Libro>
@using Librery_MVC.Models;
@using Librery_MVC.Services;

@{
    Layout = "~/Views/Shared/_UsserLayout.cshtml";

    int idRow = 0;
    
}
<h1>View de compras</h1>

<div class="row">

    <div class="col-md-3" id="div-img">

        <div class="text-center" id="imagen">
            <img src="~/principal/imagenes/buyingBooks.png" />
        </div>
        <div class="text-center" id="cont-icon-carrito">
            <span class="glyphicon glyphicon-shopping-cart" id="icon-shopping-cart" aria-hidden="true"></span><a href="@Url.Action("userListarLibros","Usser")">Seguir sumando al carrito</a>
        </div>

    </div>

    <div class="col-md-9" id="contenido">

        <div class="table-responsive" id="">

            <div id="table-scroll-comprar">

                <table class="table table-striped table-primary table-bordered" id="tableComprar">

                    <thead>
                        <tr>
                            <th class="text-center">Imagen</th>
                            <th class="text-center">Nombre</th>
                            <th class="text-center">P/unidad</th>
                            <th class="text-center">Cantidad</th>
                            <th class="text-center">Total</th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (Libro item in Model)
                        {
                            String precio = Convert.ToString(item.Precio);
                            precio = precio.Replace(",", ".");
                            
                            <tr>
                                <th class="text-center"><img src="/@item.UrlImagen.Replace("\\", "/")" width="80" height="100" /></th>
                                <th class="text-center">@item.Nombre</th>
                                <th class="text-center">$ <input type="text" class="price" id="price-@idRow" value="@precio" disabled /></th>
                                <th class="text-center">
                                    <input type="number" onchange="Total(@idRow);" class="input-number" id="input-number-@idRow" value="1" min="1" max="@item.Cantidad" placeholder="1" />
                                </th>
                                <th class="text-center">$ <input type="text" class="total" id="total-@idRow" value="@precio" disabled /></th>
                            </tr>
                            idRow++;
                        }

                    </tbody>

                </table>

            </div>

        </div>

        <input type="hidden" id="idTotales" value="@idRow" />
       
        @using (Html.BeginForm("CompraFinalizada", "Usser", FormMethod.Post, new { name = "formComprar" }))
        {

            int id = 0;

            foreach (Libro it in Model)
            {
                //Obteniendo c/u de los idLibro
                <input type="hidden" id="idHidden-@id" name="@id" value="@it.IdLibro" />
                //Obteniendo la cantidad de c/u de los libros
                <input type="hidden" id="quantityHidden-@id" name="quantityHidden-@id" value="" />

                id++;

            }

            <input type="hidden" id="finalPriceHidden" name="idHidden" value="" />
            <input type="hidden" id="userName" name="userName" value="@ViewBag.User" />

            <div class="text-center" id="finalizarBuy">

                <div>
                    <button type="button" class="btn btn-success" id="btn-finalizarCompra" onclick="showBuyAlert();"><span class="glyphicon glyphicon-ok" id="glyphicon-ok" aria-hidden="true"></span>Finalizar compra</button>              
                    <a class="btn btn-danger" href="@Url.Action("userListarLibros", "Usser")"><span class="glyphicon glyphicon-remove" id="glyphicon-remove" aria-hidden="true"></span>Cancelar</a>
                </div>
                <div>
                    <label>Precio final $</label>
                    <input type="text" id="finalPrice" disabled />
                </div>

            </div>

        }

       
    </div>

</div>

<script type="text/javascript">
  
    function addValuesToInputQuantity() {

        let tam = $("#idTotales").val();

        for (var i = 0; i < tam; i++) {

            var quantity = $('#input-number-' + i).val();
                       
            $("input[type=hidden][name=quantityHidden-"+i+"]").val(quantity); 
        }
        
    }


    function showBuyAlert() {

       alertify.confirm('Confirmar compra', '¿Confirma la compra?', function () {
         
           let idArray = [];
           let quantityArray = [];

           let tam = $("#idTotales").val();

           for (var x = 0; x < tam; x++) {
                //cargando los array para enviar al controlador
               idArray.push($("#idHidden-" + x).val()); 
               quantityArray.push($("#quantityHidden-" + x).val());
           }

           
           let user = $('#userName').val();
           let finalPrice = $('#finalPrice').val();
                        
           var uri = '@Url.Action("CompraFinalizada", "Usser")';
           $.ajax({
               url: uri,
               data: { dataId: idArray, dataQuantity: quantityArray, usuario:user, precioTotal:finalPrice },             
               type: 'POST',
               success: function (respuestaDelServidor) {
                   $("#contenido").html(respuestaDelServidor);
               }
           });
          
            //enviando los datos del formulario al controlador
            //document.formComprar.submit();         
       }
       , function () { alertify.error('Cancel') });
        
        //alertify es un framework de javascript para alerts elegantes
        //los archivos estan en la carpeta Content/alertifyjs de mi proyecto
    }


    function Total(idRow) {

        //Hay precios que son float en la bd, para que no de errores siempre convierto a float
        var getprice = $("#price-" + idRow).val();
        //si es num decimal, cambio la coma ","por el punto "." para poder hacer el calculo
        var price = parseFloat(getprice.replace(/,/g, "."));
        var quantity = $("#input-number-" + idRow).val();
        var result = parseFloat(price * quantity).toFixed(2);//.toFixed(2) muestar solo 2 decimales
        //para mostrar el resultado con punto "." al clickear el input number , reemplazo la coma por el punto
        var resultformat = result.replace(",", ".");

        $("#total-" + idRow).val(resultformat);
        //enviar el resultado al input hidden tmb
        $("#quantityHidden-" + idRow).val(quantity);

        finalPrice();
    }

    function finalPrice() {

        var sum = 0;

        $(".total").each(function () {
            var num = $(this).val();
            var price = parseFloat(num.replace(/,/g, "."));
            sum += price;
        });

        $("#finalPrice").val(sum.toFixed(2));
        
    }



</script>

<script>
    window.addEventListener("load", finalPrice, false);
    window.addEventListener("load", addValuesToInputQuantity, false);
</script>









