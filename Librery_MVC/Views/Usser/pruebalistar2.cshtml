@model List<Librery_MVC.Models.Libro>
@using Librery_MVC.Models;
@using Librery_MVC.Services;

@{
    ViewBag.Title = "pruebalistar2";
    Layout = "~/Views/Shared/_UsserLayout.cshtml";
    Autor autor = new Autor();
    Categoria category = new Categoria();
    Editorial editorial = new Editorial();
    AutorService sa = new AutorService();
    CategoriaService cs = new CategoriaService();
    EditorialService es = new EditorialService();
    List<Autor> autorList = new List<Autor>();
    List<Categoria> categoryList = new List<Categoria>();
    autorList = sa.ListAutores();
    categoryList = cs.getAllCategories();

    TempData.Keep("User");
}

<div class="row" id="row1">

    <div class="panel-body" id="filtro-panel-body">

        <div class="col-md-4 text-center">
            <label>Nombre de libro</label>
            <input class="form-control" id="nombreLibro" maxlength="80" placeholder="Ingrese nombre del libro" />
        </div>

        <div class="col-md-3 text-center">
            <label>Autor</label>
            <select name="ddlAutor" class="form-control inputFiltros" id="ddlAutor" onmousedown="if(this.options.length>5){this.size=5;}" onchange='this.size=0;' onblur="this.size=0;">

                @if (!String.IsNullOrEmpty(ViewBag.Autor))
                {
                    //para que no me quede el nombre del autor duplicado en el dropDownList de autores
                    for (int i = 0; i < autorList.Count; i++)
                    {
                        if (autorList[i].IdAutor.Equals(ViewBag.IdAut))
                        {
                            autorList.RemoveAt(i);
                            i--;
                        }
                    }

                    <option value=@ViewBag.IdAut>@ViewBag.Autor</option>
                    <option value="todos">Todos</option>
                    foreach (Autor item in autorList)
                    {
                        <option value=@item.IdAutor>@item.Nombre</option>
                    }

                }
                else
                {
                    <option value="todos">Todos</option>
                    foreach (Autor item in autorList)
                    {
                        <option value=@item.IdAutor>@item.Nombre</option>
                    }
                }


            </select>
        </div>

        <div class="col-md-3 text-center">
            <label>Categoria</label>
            <select name="ddlCategory" class="form-control inputFiltros" id="ddlCategory" onmousedown="if(this.options.length>5){this.size=5;}" onchange='this.size=0;' onblur="this.size=0;">

                @if (!String.IsNullOrEmpty(ViewBag.Categoria))
                {
                    //para que no me quede el nombre de la categoria duplicado en el dropDownList de categoria
                    for (int x = 0; x < categoryList.Count; x++)
                    {
                        if (categoryList[x].IdCategoria.Equals(ViewBag.IdCat))
                        {
                            categoryList.RemoveAt(x);
                            x--;
                        }
                    }

                    <option value=@ViewBag.IdCat>@ViewBag.Categoria</option>
                    <option value="todos">Todos</option>
                    foreach (Categoria item in categoryList)
                    {
                        <option value=@item.IdCategoria>@item.Nombre</option>
                    }

                }
                else
                {
                    <option value="todos">Todos</option>
                    foreach (Categoria item in categoryList)
                    {
                        <option value=@item.IdCategoria>@item.Nombre</option>
                    }
                }


            </select>
        </div>

        <div class="col-md-1 col-xs-4">
            <label>Desde: $</label>
            <input type="number" class="form-control" id="price1" />
        </div>

        <div class="col-md-1 col-xs-4">
            <label>Hasta: $</label>
            <input type="number" class="form-control" id="price2" />
        </div>

    </div>

    <div id="cont-btn_buscar">
        <button class="btn btn-default" id="btn_buscar" type="button" onclick="filtrar();"><span class="glyphicon glyphicon-search" id="glyphicon-search" aria-hidden="true"></span>Buscar</button>
    </div>

</div>

<div class="row" id="cont-libros">

    @foreach (Libro item in Model)
    {

        <div class="col-md-3 container-image text-center">

            <img src="~/@item.UrlImagen" alt="@item.Nombre">

            <div class="title-book text-center">

                <a href="@Url.Action("MostrarLibro", "Usser", new { idLibro = item.IdLibro})">
                    @item.Nombre (@item.AnioDeLanzamiento)
                </a>

            </div>

            <div class="price-book text-center">$@item.Precio</div>

        </div>
    }

</div>






<script type="text/javascript">

    function filtrar() {

        var uri = '@Url.Action("userFiltrarLibros", "Usser")';
        var nombre = $('#nombreLibro').val();
        var autor = $('#ddlAutor').val();
        var categoria = $('#ddlCategory').val();

        var price1 = $('#price1').val();
        var price2 = $('#price2').val();

        var filtros = new Array();
        filtros.push(nombre);
        filtros.push(autor);
        filtros.push(categoria);
        filtros.push(price1);
        filtros.push(price2);

        $.ajax({
            url: uri,
            data: { data: filtros },
            type: 'POST',
            success: function (respuestaDelServidor) {
                $("#cont-libros").html(respuestaDelServidor);
            }
        });

    }

</script>

<script>
    // PAGINATION
    //get the table element
    var $table = document.getElementById("#myTable"),
        // number of rows per page
        $n = 4,
        // number of rows of the table
        $rowCount = $table.rows.length,
        // get the first cell's tag name (in the first row)
        $firstRow = $table.rows[0].firstElementChild.tagName,
        // boolean var to check if table has a head row
        $hasHead = ($firstRow === "TH"),
        // an array to hold each row
        $tr = [],
        // loop counters, to start count from rows[1] (2nd row) if the first row has a head tag
        $i, $ii, $j = ($hasHead) ? 1 : 0,
        // holds the first row if it has a (<TH>) & nothing if (<TD>)
        $th = ($hasHead ? $table.rows[(0)].outerHTML : "");
    // count the number of pages
    var $pageCount = Math.ceil($rowCount / $n);
    // if we had one page only, then we have nothing to do ..
    if ($pageCount > 1) {
        // assign each row outHTML (tag name & innerHTML) to the array
        for ($i = $j, $ii = 0; $i < $rowCount; $i++ , $ii++)
            $tr[$ii] = $table.rows[$i].outerHTML;
        // create a div block to hold the buttons
        $table.insertAdjacentHTML("afterend", "<div id='buttons'></div");
        // the first sort, default page is the first one
        sort(1);
    }

    // ($p) is the selected page number. it will be generated when a user clicks a button
    function sort($p) {
        /* create ($rows) a variable to hold the group of rows
        ** to be displayed on the selected page,
        ** ($s) the start point .. the first row in each page, Do The Math
        */
        var $rows = $th, $s = (($n * $p) - $n);
        for ($i = $s; $i < ($s + $n) && $i < $tr.length; $i++)
            $rows += $tr[$i];

        // now the table has a processed group of rows ..
        $table.innerHTML = $rows;
        // create the pagination buttons
        document.getElementById("buttons").innerHTML = pageButtons($pageCount, $p);
        // CSS Stuff
        document.getElementById("id" + $p).setAttribute("class", "active");
    }


    // ($pCount) : number of pages,($cur) : current page, the selected one ..
    function pageButtons($pCount, $cur) {
        /* this variables will disable the "Prev" button on 1st page
           and "next" button on the last one */
        var $prevDis = ($cur == 1) ? "disabled" : "",
            $nextDis = ($cur == $pCount) ? "disabled" : "",
            /* this ($buttons) will hold every single button needed
            ** it will creates each button and sets the onclick attribute
            ** to the "sort" function with a special ($p) number..
            */
            $buttons = "<input class='btnPage' type='button' value='&lt;&lt; Prev' onclick='sort(" + ($cur - 1) + ")' " + $prevDis + ">";
        for ($i = 1; $i <= $pCount; $i++)
            $buttons += "<input class='btnPage' type='button' id='id" + $i + "' value='" + $i + "' onclick='sort(" + $i + ")'>";
        $buttons += "<input class='btnPage' type='button' value='Next &gt;&gt;' onclick='sort(" + ($cur + 1) + ")' " + $nextDis + ">";
        return $buttons;
    }
</script>



