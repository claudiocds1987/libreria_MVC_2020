@model List<Librery_MVC.Models.LightBook>
@using Librery_MVC.Models;
@using Librery_MVC.Services;


@{
    ViewBag.Title = "pruebalistar";
    Layout = "~/Views/Shared/_UsserLayout.cshtml";
    Autor autor = new Autor();
    Categoria category = new Categoria();
    Editorial editorial = new Editorial();
    AutorService sa = new AutorService();
    CategoriaService cs = new CategoriaService();
    EditorialService es = new EditorialService();
    List<Autor> autorList = new List<Autor>();
    List<Categoria> categoryList = new List<Categoria>();
    autorList = sa.ListAutores();
    categoryList = cs.getAllCategories();
    TempData.Keep("User");
    int cont = 0;
}




<div class="row" id="row1">

    <div class="panel-body" id="filtro-panel-body">

        <div class="col-md-4 text-center">
            <label>Nombre de libro</label>
            <input class="form-control" id="nombreLibro" maxlength="80" placeholder="Ingrese nombre del libro" />
        </div>

        <div class="col-md-3 text-center">
            <label>Autor</label>
            <select name="ddlAutor" class="form-control inputFiltros" id="ddlAutor" onmousedown="if(this.options.length>5){this.size=5;}" onchange='this.size=0;' onblur="this.size=0;">

                @if (!String.IsNullOrEmpty(ViewBag.Autor))
                {
                    //para que no me quede el nombre del autor duplicado en el dropDownList de autores
                    for (int i = 0; i < autorList.Count; i++)
                    {
                        if (autorList[i].IdAutor.Equals(ViewBag.IdAut))
                        {
                            autorList.RemoveAt(i);
                            i--;
                        }
                    }

                    <option value=@ViewBag.IdAut>@ViewBag.Autor</option>
                    <option value="todos">Todos</option>
                    foreach (Autor item in autorList)
                    {
                        <option value=@item.IdAutor>@item.Nombre</option>
                    }

                }
                else
                {
                    <option value="todos">Todos</option>
                    foreach (Autor item in autorList)
                    {
                        <option value=@item.IdAutor>@item.Nombre</option>
                    }
                }


            </select>
        </div>

        <div class="col-md-3 text-center">
            <label>Categoria</label>
            <select name="ddlCategory" class="form-control inputFiltros" id="ddlCategory" onmousedown="if(this.options.length>5){this.size=5;}" onchange='this.size=0;' onblur="this.size=0;">

                @if (!String.IsNullOrEmpty(ViewBag.Categoria))
                {
                    //para que no me quede el nombre de la categoria duplicado en el dropDownList de categoria
                    for (int x = 0; x < categoryList.Count; x++)
                    {
                        if (categoryList[x].IdCategoria.Equals(ViewBag.IdCat))
                        {
                            categoryList.RemoveAt(x);
                            x--;
                        }
                    }

                    <option value=@ViewBag.IdCat>@ViewBag.Categoria</option>
                    <option value="todos">Todos</option>
                    foreach (Categoria item in categoryList)
                    {
                        <option value=@item.IdCategoria>@item.Nombre</option>
                    }

                }
                else
                {
                    <option value="todos">Todos</option>
                    foreach (Categoria item in categoryList)
                    {
                        <option value=@item.IdCategoria>@item.Nombre</option>
                    }
                }


            </select>
        </div>

        <div class="col-md-1 col-xs-4">
            <label>Desde: $</label>
            <input type="number" class="form-control" id="price1" />
        </div>

        <div class="col-md-1 col-xs-4">
            <label>Hasta: $</label>
            <input type="number" class="form-control" id="price2" />
        </div>

    </div>

    <div id="cont-btn_buscar">
        <button class="btn btn-default" id="btn_buscar" type="button" onclick="filtrar();"><span class="glyphicon glyphicon-search" id="glyphicon-search" aria-hidden="true"></span>Buscar</button>
    </div>

</div>

<div class="row" id="cont-libros">

    @foreach (LightBook item in Model)
    {       
       
        <div class="col-md-3 container-image text-center">

            <img src="~/@item.UrlImagen" alt="@item.Nombre">

            <div class="title-book text-center">

                <a href="@Url.Action("MostrarLibro", "Usser", new { idLibro = item.IdLibro})">
                    @item.Nombre (@item.AnioDeLanzamiento)
                </a>

            </div>

            <div class="price-book text-center">$@item.Precio</div>

        </div>
    }

</div>


@if (ViewBag.TotalPages > 1)
{
    
    <div class="text-center" id="cont-pagination-btns">

        @for (int i = 1; i <= @ViewBag.TotalPages; i++)
        {
            //cont++;
            <button type="button" value="@i" class="pagination-btns" onclick="sendToController(this);">@i</button>
        }

    </div>

}

@*<input type="hidden" id="last-button" value="@cont"/>*@

<script type="text/javascript">

    @*//Obtengo el contenido del model(la lista con los libros)
    var modal = @Html.Raw(Json.Encode(Model));*@

    //Obtengo el contenido de las ViewBag
    var totalBooks =  @Html.Raw(Json.Encode(ViewBag.TotalBooks));
    var items = @Html.Raw(Json.Encode(ViewBag.ItemsxPage));

    var indice = items;
    var librosAmostrar = totalBooks - items;

    sessionStorage.setItem('librosAmostrar', librosAmostrar);
    sessionStorage.setItem('indice', indice);
    sessionStorage.setItem('totalBooks', totalBooks);

    function sendToController(page) {

        var numberPage = page.value;

        var uri = '@Url.Action("paginar", "Usser")';

        $.ajax({
            url: uri,
            data: { numberPage: numberPage },
            type: 'POST',
            success: function (respuestaDelServidor) {
                $("#cont-libros").html(respuestaDelServidor);
            }
        });
    }

    @*function sendToController() {
       
        var uri = '@Url.Action("paginar", "Usser")';

        $.ajax({
            url: uri,
            data: { indice: indice, librosAmostrar: librosAmostrar, itemsxPage: items },
            type: 'POST',
            success: function (respuestaDelServidor) {
                $("#cont-libros").html(respuestaDelServidor);
            }
        });
    }*@


    function filtrar() {

        var uri = '@Url.Action("userFiltrarLibros", "Usser")';
        var nombre = $('#nombreLibro').val();
        var autor = $('#ddlAutor').val();
        var categoria = $('#ddlCategory').val();

        var price1 = $('#price1').val();
        var price2 = $('#price2').val();

        var filtros = new Array();
        filtros.push(nombre);
        filtros.push(autor);
        filtros.push(categoria);
        filtros.push(price1);
        filtros.push(price2);

        $.ajax({
            url: uri,
            data: { data: filtros },
            type: 'POST',
            success: function (respuestaDelServidor) {
                $("#cont-libros").html(respuestaDelServidor);
            }
        });

    }

    @* function sendToActionPaginar(buttonNumber) {

        //Obtengo el contenido de las ViewBag
        var totalBooks =  @Html.Raw(Json.Encode(ViewBag.TotalBooks));
        var items = @Html.Raw(Json.Encode(ViewBag.ItemsxPage));
        var desde = 0;
        var num = buttonNumber.value;
        var lastButton = $('#last-button').val();

        if (num == 1)
            hasta = items;

        else if (num == lastButton) {
            //funciona mal
            desde = (totalBooks - items) - 1;
            hasta = totalBooks - 1;
        }

        else {
            //funciona mal
            desde = (num * items) - 1;
            hasta = desde + items;
        }


        var uri = '@Url.Action("paginar", "Usser")';

        $.ajax({
            url: uri,
            data: { desde: desde, hasta: hasta },
            type: 'POST',
            success: function (respuestaDelServidor) {
                $("#cont-libros").html(respuestaDelServidor);
            }
        });

    } *@

</script>

@*<script type="text/javascript">

        window.addEventListener("load", recorrerModal, false);

    </script>*@
